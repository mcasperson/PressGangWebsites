/*
 * INSTRUCTIONS FOR USE
 * 1. Include this script: <script type="application/javascript" src="pressgang_websites.js"></script>
 * 2. Include the script generated by the csprocessor: <script type="application/javascript" src="pressgang_website.js"></script>
 * 3. Set the base URL to the chunked HTML sections: <script type="application/javascript">pressgang_website_base = "file:///home/matthew/Documents/PressGang_Website_Sample/PressGang_Website_Sample/tmp/en-US/html";</script>
 * 4. Add the data-pressgangtopic attribute with the value of the topic id to elements that should display a help topic: data-pressgangtopic="21465"
 * 5. Call the pressgang_website_enable() function to display the help overlay.
 */

/* THE FOLLOWING VARIABLES NEED TO BE SET BY THE SITE THAT USES THE HELP OVERLAY */

/**
 * This needs to be set by the page that includes this script. It will point to the base URL
 * where the HTML files displayed in the callout are located.
 */
pressgang_website_base = "";
/**
 * This needs to be set by the page that includes this script. It will point to the base URL
 * where the HTML files that are part of the original documentation are found.
 *
 * Note that this functionality requires some additional work in the brand to allow this script
 * to determine the URL of the iframe that displays the books.
 */
pressgang_website_doc_base = "";
/**
 * If you want to keep the images used by the overlay in a directory other than the root, set this
 * variable. If this variable is not an empty string, make sure it ends with a slash.
 */
pressgang_website_images_dir = "";

/* THESE VARIABLES ARE USED BY THE OVERLAY, AND DON'T NEED TO BE CHANGED */

/**
 * The maximum width of what the help overlay considers the side borders in a page. This
 * is used when determining what kind of callout to display.
 */
pressgang_website_column_width = 300;

/**
 * Time, in milliseconds, to delay the opening of a new popover.
 */
pressgang_website_popover_switch_deplay = 100;
/**
 * Time, in milliseconds, to wait before closing any displays popovers if the
 * mouse has been moved off all popovers and highlighted elements.
 */
pressgang_website_popover_close_deplay = 3000;
/**
 * Any pending timeouts to open a new popover are assigned to this.
 */
pressgang_website_popover_switch_timeout = null;
/**
 * The id assigned to the div that dims elements that have no help topic.
 */
pressgang_website_dimmerOverlayID = "pressgang_website_dimmer";
/**
 * The id assigned to the div that sits over all elements, blocking mouse interactions.
 */
pressgang_website_blockerOverlayID = "pressgang_website_blocker";
/**
 * The id assigned to the callout.
 */
pressgang_website_calloutID = "pressgang_website_callout";
/**
 * The id assigned to the initial callout.
 */
pressgang_website_initial_calloutID = "pressgang_website_initial_callout";
/**
 * The callouts are offset slightly against the widget they are associated with
 */
pressgang_website_callout_offset_size = 6;
/**
 * The callouts are offset slightly against the widget they are associated with
 */
pressgang_website_diagonal_callout_offset_size = 22;
/**
 * The last element that displayed a callout.
 */
pressgang_website_lastSelectedElement = null;
/**
 * The help popover to be displayed when no other popover is displayed
 */
var pressgang_website_initialHelp = null;
/**
 * The zIndex of any dimmer placed over a individual element
 */
var pressgang_website_local_dimmer_zindex_offset = 1;
/**
 * The zIndex of any individual element promoted above a local dimmer
 */
var pressgang_website_local_zindex_offset = 2;


/**
 * @return the name of the current html page
 */
pressgang_website_get_page_name = function(pathname) {
    var pathArray = pathname.split( '/' );
    var file = pathArray[pathArray.length - 1];
    var hashIndex = file.indexOf("#");
    if (hashIndex != -1) {
        file = file.substr(0, hashIndex);
    }
    var questionMarkIndex = file.indexOf("?");
    if (questionMarkIndex != -1) {
        file = file.substr(0, questionMarkIndex);
    }
    if (file.length >= 5 && file.substr(file.length - 5) == ".html") {
        file = file.substr(0, file.length - 5);
    }
    return file;
}

/**
 * Passes a message to the iframe, and waits for the URL to be returned
 * @param iframe the iframe to pass the message to
 * @param success the function to call with the iframe URL
 */
pressgang_website_get_iframe_url = function(iframe, success) {
    return function() {
        var returned = false;
        var listener = function(event) {
            try {
                var payload = JSON.parse(event.data);
                if (payload.message == "pressgang_website_url") {
                    success(pressgang_website_get_page_name(payload.data));
                    returned = true;
                    window.removeEventListener("message", arguments.callee);
                }
            } catch (ex) {

            }
        }

        window.addEventListener("message", listener, false);
        iframe.contentWindow.postMessage('{"message":"url"}', "*");

        /*
         * Don't wait forever for a response
         */
        setTimeout(function() {
            if (!returned) {
                window.removeEventListener("message", listener);
            }
        }, 2000);
    }
}

/**
 * Closes the help overlay when escape is pressed
 * @param e the event data
 */
pressgang_website_key_handler = function(e) {



    if (e.keyCode == 27) {
        pressgang_website_disable();
    }
}

/**
 * Closes the hel poverlay if the URL changes.
 * @param e the event data
 */
pressgang_website_url_change_handler = function(e) {
    pressgang_website_disable();
}

/**
 * @return the highest Z index used by the page
 */
pressgang_website_get_highest_zindex = function() {
    var elements = document.getElementsByTagName("*");
    var highest_index = 0;

    for (var i = 0; i < elements.length - 1; i++) {
        var thisElementZIndex = parseInt(window.getComputedStyle(elements[i], null)['zIndex']);
        if (thisElementZIndex > highest_index) {
            highest_index = thisElementZIndex;
        }
    }

    return highest_index;
}

/**
 * Builds a callout and positions it on the page.
 * @param element The element displaying the help topic.
 * @param elementTopicData The help data associated with this topic.
 */
pressgang_website_build_callout = function (element, elementTopicData, calloutZIndex) {

    if (!element) {
        console.log("element should not be null");
        return;
    }

    if (!elementTopicData) {
        console.log("elementTopicData should not be null");
        return;
    }

    if (!elementTopicData.target) {
        console.log("elementTopicData.target should not be null");
        return;
    }

    if (!elementTopicData.topicId) {
        console.log("elementTopicData.topicId should not be null");
        return;
    }

    var oldCallout = document.getElementById(pressgang_website_calloutID);
    if (oldCallout) {
        oldCallout.parentElement.removeChild(oldCallout);
    }

    var calloutDiv = document.createElement("div");
    var contentDiv = document.createElement("div");
    var outerArrowDiv = document.createElement("div");
    var innerArrowDiv = document.createElement("div");
    var iframe = document.createElement("iframe");
    var bookIcon = document.createElement("img");
    var bookLink = document.createElement("a");
    var closeIcon = document.createElement("img");
    var closeLink = document.createElement("a");
    var startIcon = document.createElement("img");
    var startLink = document.createElement("a");

    bookLink.style.position = closeLink.style.position = startLink.style.position = "absolute";


    startIcon.src = pressgang_website_images_dir + "start.png";
    startIcon.style.margin = "0";
    startIcon.style.width = startIcon.style.height = "16px";
    startLink.style.top = "4px";
    startLink.style.right = "24px";
    startLink.style.zIndex = 2;
    startLink.appendChild(startIcon);
    contentDiv.appendChild(startLink);
    startLink.onclick = function() {
        iframe.src = pressgang_website_base + "/" + elementTopicData.target + ".html";
    }

    /*bookIcon.src = pressgang_website_images_dir + "book.png";
     bookIcon.style.margin = "0";
     bookIcon.style.width = bookIcon.style.height = "16px";
     bookLink.style.top = "4px";
     bookLink.style.right = "24px";
     bookLink.style.zIndex = 2;
     bookLink.appendChild(bookIcon);
     contentDiv.appendChild(bookLink);
     bookLink.onclick = pressgang_website_get_iframe_url(iframe, function(name) {
     window.open(pressgang_website_doc_base + "#" + name);
     });*/

    closeIcon.src = pressgang_website_images_dir + "close.png";
    closeIcon.style.margin = "0";
    closeIcon.style.width = closeIcon.style.height = "16px";
    closeLink.style.top = "4px";
    closeLink.style.right = "4px";
    closeLink.style.zIndex = 2;
    closeLink.appendChild(closeIcon);
    contentDiv.appendChild(closeLink);
    closeLink.onclick =  pressgang_website_disable;

    iframe.className = "pressgang_websites_contentIFrame";
    calloutDiv.className = "pressgang_websites_callout";

    iframe.src = pressgang_website_base + "/" + elementTopicData.target + ".html";

    calloutDiv.id = pressgang_website_calloutID;
    calloutDiv.style.zIndex = calloutZIndex || 0;

    /*
     * The inner arrow is always appended to the outer arrow
     */
    outerArrowDiv.appendChild(innerArrowDiv);
    /*
     * The iframe is always appended to the content div
     */
    contentDiv.appendChild(iframe);

    document.body.appendChild(calloutDiv);

    // Need to hide the div when it is first added to the DOM to avoid the flickering as it is repositioned,
    // but we can't use display = "none", because that will screw up getBoundingClientRect(), so just set
    // the alpha to 0
    calloutDiv.style.opacity = 0;

    /*
     * Get the viewport dimensions
     */
    var w = window,
        d = document,
        e = d.documentElement,
        g = d.getElementsByTagName('body')[0],
        x = w.innerWidth || e.clientWidth || g.clientWidth,
        y = w.innerHeight|| e.clientHeight|| g.clientHeight,
        hy = y/2,
        hx = x/2,
        ty = y/3,
        tx = x/3;

    /*
     We use 1 third of the screen as a rough guide as to where any menus will sit
     in relation to the main content. But if they are larger than pressgang_website_column_width
     we use that value instead.
     */

    if (tx > pressgang_website_column_width) {
        tx = pressgang_website_column_width;
    }

    /*
     * Get the elements position
     */
    var elementPosition = element.getBoundingClientRect();

    /*
     This is where we try to position the popover based on the size and position of the element
     that the popover is associated with. This really is a lot of trial and error to find some
     logic that places the popover in a natural position.
     */

    // If there is a large element, the popover should be centered as much as possible
    var minWidthForCentralLayout = 800;
    var minHeightForCentralLayout = 600;
    var isCenteredHorizontally = false;
    var isCenteredVertically = false;

    if (elementPosition.height >= minHeightForCentralLayout) {
        // make a note that we have set the vertical position based on the size of the element,
        // and not its position.
        isCenteredVertically = true;
        calloutDiv.style.top = (elementPosition.top + elementPosition.height / 2) + "px";
    }

    if (elementPosition.width >= minWidthForCentralLayout) {
        isCenteredHorizontally = true;
        if (elementPosition.left < hx) {
            calloutDiv.style.left = (elementPosition.left + elementPosition.width / 2) + "px";
        } else {
            setTimeout(function() {
                var calloutPosition = calloutDiv.getBoundingClientRect();
                calloutDiv.style.left = (elementPosition.left + elementPosition.width / 2  - calloutPosition.width) + "px";
            }, 0);
        }
    }

    if (isCenteredHorizontally && isCenteredVertically) {
        /*
         If we have set both the vertical and horizontal position based on the size of the element,
         then go ahead and set the style of the popover.
         */
        if (elementPosition.left < hx) {
            contentDiv.className = "pressgang_websites_divContainerUp";
            outerArrowDiv.className = "pressgang_websites_calloutUp";
            innerArrowDiv.className = "pressgang_websites_calloutUp2";
            calloutDiv.appendChild(outerArrowDiv);
            calloutDiv.appendChild(contentDiv);

        } else {
            contentDiv.className = "pressgang_websites_divContainerUp";
            outerArrowDiv.className = "pressgang_websites_calloutUpRight";
            innerArrowDiv.className = "pressgang_websites_calloutUp2";
            calloutDiv.appendChild(outerArrowDiv);
            calloutDiv.appendChild(contentDiv);
        }
    } else {
        /*
         Only proceed if we still need to set either the vertical or horizontal popover position
         based on the element position.
         */
        if (elementPosition.left < tx) {

            if (elementPosition.top < ty) {
                contentDiv.className = "pressgang_websites_divContainerUp";
                outerArrowDiv.className = "pressgang_websites_calloutUp";
                innerArrowDiv.className = "pressgang_websites_calloutUp2";
                calloutDiv.appendChild(outerArrowDiv);
                calloutDiv.appendChild(contentDiv);

                setTimeout(function() {
                    var calloutPosition = calloutDiv.getBoundingClientRect();

                    if (!isCenteredHorizontally) {
                        var idealLeft = elementPosition.right - pressgang_website_diagonal_callout_offset_size;
                        calloutDiv.style.left = (idealLeft + calloutPosition.width > x ? x - calloutPosition.width : idealLeft) + "px";
                    }

                    if (!isCenteredVertically) {
                        var idealTop = elementPosition.bottom - pressgang_website_callout_offset_size;
                        calloutDiv.style.top = (idealTop + calloutPosition.height > y ? y - calloutPosition.height : idealTop) + "px";
                    }
                }, 0);

            } else if (elementPosition.top > ty * 2) {
                /*
                 * The element is on the bottom of the screen
                 */
                contentDiv.className = "pressgang_websites_divContainerDown";
                outerArrowDiv.className = "pressgang_websites_calloutDown";
                innerArrowDiv.className = "pressgang_websites_calloutDown2";
                calloutDiv.appendChild(contentDiv);
                calloutDiv.appendChild(outerArrowDiv);

                /*
                 * calloutDiv.getBoundingClientRect() will only return valid information in the next tick,
                 * so use setTimeout
                 */
                setTimeout(function() {
                    var calloutPosition = calloutDiv.getBoundingClientRect();

                    if (!isCenteredHorizontally) {
                        var idealLeft = elementPosition.right - pressgang_website_diagonal_callout_offset_size;
                        calloutDiv.style.left = (idealLeft + calloutPosition.width > x ? x - calloutPosition.width : idealLeft) + "px";
                    }

                    if (!isCenteredVertically) {
                        var idealTop = elementPosition.top - calloutPosition.height + pressgang_website_callout_offset_size;
                        calloutDiv.style.top = (idealTop < 0 ? 0 : idealTop) + "px";
                    }
                }, 0);
            } else {
                /*
                 * The element is in the middle of the screen
                 */
                contentDiv.className = "pressgang_websites_divContainerLeft";
                outerArrowDiv.className = "pressgang_websites_calloutLeft";
                innerArrowDiv.className = "pressgang_websites_calloutLeft2";
                calloutDiv.appendChild(outerArrowDiv);
                calloutDiv.appendChild(contentDiv);

                /*
                 * calloutDiv.getBoundingClientRect() will only return valid information in the next tick,
                 * so use setTimeout
                 */
                setTimeout(function() {
                    var calloutPosition = calloutDiv.getBoundingClientRect();

                    var idealTop = elementPosition.top + pressgang_website_callout_offset_size;

                    /*
                     * In the event that the callout is higher than a 3rd of the screen,
                     * display a callout over the top or underneath of the element
                     */
                    if (idealTop + calloutPosition.height > y) {
                        if (elementPosition.top > hy) {
                            contentDiv.className = "pressgang_websites_divContainerDown";
                            outerArrowDiv.className = "pressgang_websites_calloutDown";
                            innerArrowDiv.className = "pressgang_websites_calloutDown2";

                            while (calloutDiv.hasChildNodes()) {
                                calloutDiv.removeChild(calloutDiv.lastChild);
                            }

                            calloutDiv.appendChild(contentDiv);
                            calloutDiv.appendChild(outerArrowDiv);

                            var calloutPosition = calloutDiv.getBoundingClientRect();

                            if (!isCenteredHorizontally) {
                                var idealLeft = elementPosition.right - pressgang_website_diagonal_callout_offset_size;
                                calloutDiv.style.left = (idealLeft + calloutPosition.width > x ? x - calloutPosition.width : idealLeft) + "px";
                            }

                            if (!isCenteredVertically) {
                                var idealTop = elementPosition.top - calloutPosition.height + pressgang_website_callout_offset_size;
                                calloutDiv.style.top = (idealTop < 0 ? 0 : idealTop) + "px";
                            }
                        } else {
                            contentDiv.className = "pressgang_websites_divContainerUp";
                            outerArrowDiv.className = "pressgang_websites_calloutUp";
                            innerArrowDiv.className = "pressgang_websites_calloutUp2";

                            while (calloutDiv.hasChildNodes()) {
                                calloutDiv.removeChild(calloutDiv.lastChild);
                            }

                            calloutDiv.appendChild(outerArrowDiv);
                            calloutDiv.appendChild(contentDiv);

                            var calloutPosition = calloutDiv.getBoundingClientRect();

                            if (!isCenteredHorizontally) {
                                var idealLeft = elementPosition.right - pressgang_website_diagonal_callout_offset_size;
                                calloutDiv.style.left = (idealLeft + calloutPosition.width > x ? x - calloutPosition.width : idealLeft) + "px";
                            }

                            if (!isCenteredVertically) {
                                var idealTop = elementPosition.bottom - pressgang_website_callout_offset_size;
                                calloutDiv.style.top = (idealTop + calloutPosition.height > y ? y - calloutPosition.height : idealTop) + "px";
                            }
                        }
                    } else {
                        if (!isCenteredHorizontally) {
                            var idealLeft = elementPosition.right - pressgang_website_diagonal_callout_offset_size;
                            calloutDiv.style.left = (idealLeft + calloutPosition.width > x ? x - calloutPosition.width : idealLeft) + "px";
                        }

                        if (!isCenteredVertically) {
                            calloutDiv.style.top = idealTop + "px";
                        }
                    }
                }, 0);
            }
        } else if (elementPosition.left > x - tx) {
            /*
             * The element is on the right hand side of the screen
             */
            if (elementPosition.top < ty) {
                /*
                 * The element is on the top of the screen
                 */
                contentDiv.className = "pressgang_websites_divContainerUp";
                outerArrowDiv.className = "pressgang_websites_calloutUpRight";
                innerArrowDiv.className = "pressgang_websites_calloutUp2";
                calloutDiv.appendChild(outerArrowDiv);
                calloutDiv.appendChild(contentDiv);

                /*
                 * calloutDiv.getBoundingClientRect() will only return valid information in the next tick,
                 * so use setTimeout
                 */
                setTimeout(function() {
                    var calloutPosition = calloutDiv.getBoundingClientRect();

                    if (!isCenteredHorizontally) {
                        var idealLeft = elementPosition.left - calloutPosition.width + pressgang_website_diagonal_callout_offset_size;
                        calloutDiv.style.left = (idealLeft + calloutPosition.width < 0 ? 0 : idealLeft) + "px";
                    }

                    if (!isCenteredVertically) {
                        var idealTop = elementPosition.bottom - pressgang_website_callout_offset_size;
                        calloutDiv.style.top = (idealTop + calloutPosition.height > y ? y - calloutPosition.height : idealTop) + "px";
                    }

                }, 0);


            } else if (elementPosition.top > ty * 2){
                /*
                 * The element is on the bottom of the screen
                 */
                contentDiv.className = "pressgang_websites_divContainerDown";
                outerArrowDiv.className = "pressgang_websites_calloutDownRight";
                innerArrowDiv.className = "pressgang_websites_calloutDown2";
                calloutDiv.appendChild(contentDiv);
                calloutDiv.appendChild(outerArrowDiv);

                setTimeout(function() {
                    var calloutPosition = calloutDiv.getBoundingClientRect();

                    if (!isCenteredHorizontally) {
                        var idealLeft = elementPosition.left - calloutPosition.width + pressgang_website_diagonal_callout_offset_size;
                        calloutDiv.style.left = (idealLeft + calloutPosition.width < 0 ? 0 : idealLeft) + "px";
                    }

                    if (!isCenteredVertically) {
                        var idealTop = elementPosition.top - calloutPosition.height + pressgang_website_callout_offset_size;
                        calloutDiv.style.top = (idealTop + calloutPosition.height < 0 ? 0 : idealTop) + "px";
                    }
                }, 0);
            } else {
                /*
                 * The element is in the middle of the screen
                 */
                contentDiv.className = "pressgang_websites_divContainerRight";
                outerArrowDiv.className = "pressgang_websites_calloutRight";
                innerArrowDiv.className = "pressgang_websites_calloutRight2";
                calloutDiv.appendChild(outerArrowDiv);
                calloutDiv.appendChild(contentDiv);

                //calloutDiv.style.top = elementPosition.top + "px";
                //calloutDiv.style.left = (elementPosition.right - pressgang_website_callout_offset_size) + "px";

                setTimeout(function() {

                    var calloutPosition = calloutDiv.getBoundingClientRect();

                    if (!isCenteredHorizontally) {
                        var idealLeft = elementPosition.left - calloutPosition.width + pressgang_website_diagonal_callout_offset_size;
                        calloutDiv.style.left = (idealLeft + calloutPosition.width < 0 ? 0 : idealLeft) + "px";
                    }

                    var idealTop = elementPosition.top + pressgang_website_callout_offset_size;

                    /*
                     * In the event that the callout is higher than a 3rd of the screen,
                     * display a callout over the top of the element
                     */
                    if (idealTop + calloutPosition.height > y) {
                        if (elementPosition.top > hy) {
                            contentDiv.className = "pressgang_websites_divContainerDown";
                            outerArrowDiv.className = "pressgang_websites_calloutDownRight";
                            innerArrowDiv.className = "pressgang_websites_calloutDown2";

                            while (calloutDiv.hasChildNodes()) {
                                calloutDiv.removeChild(calloutDiv.lastChild);
                            }

                            calloutDiv.appendChild(contentDiv);
                            calloutDiv.appendChild(outerArrowDiv);

                            var calloutPosition = calloutDiv.getBoundingClientRect();

                            if (!isCenteredHorizontally) {
                                var idealLeft = elementPosition.left - calloutPosition.width + pressgang_website_diagonal_callout_offset_size;
                                calloutDiv.style.left = (idealLeft + calloutPosition.width < 0 ? 0 : idealLeft) + "px";
                            }

                            if (!isCenteredVertically) {
                                var idealTop = elementPosition.top - calloutPosition.height + pressgang_website_callout_offset_size;
                                calloutDiv.style.top = (idealTop + calloutPosition.height < 0 ? 0 : idealTop) + "px";
                            }
                        } else {
                            contentDiv.className = "pressgang_websites_divContainerUp";
                            outerArrowDiv.className = "pressgang_websites_calloutUpRight";
                            innerArrowDiv.className = "pressgang_websites_calloutUp2";

                            while (calloutDiv.hasChildNodes()) {
                                calloutDiv.removeChild(calloutDiv.lastChild);
                            }

                            calloutDiv.appendChild(outerArrowDiv);
                            calloutDiv.appendChild(contentDiv);

                            var calloutPosition = calloutDiv.getBoundingClientRect();

                            if (!isCenteredHorizontally) {
                                var idealLeft = elementPosition.left - calloutPosition.width + pressgang_website_diagonal_callout_offset_size;
                                calloutDiv.style.left = (idealLeft + calloutPosition.width < 0 ? 0 : idealLeft) + "px";
                            }

                            if (!isCenteredVertically) {
                                var idealTop = elementPosition.bottom - pressgang_website_callout_offset_size;
                                calloutDiv.style.top = (idealTop + calloutPosition.height > y ? y - calloutPosition.height : idealTop) + "px";
                            }

                        }
                    } else {
                        if (!isCenteredVertically) {
                            calloutDiv.style.top = idealTop + "px";
                        }
                    }

                }, 0);
            }
        } else {
            if (elementPosition.left < hx) {
                /*
                 * The element is on the left hand side of the screen
                 */
                if (elementPosition.top < hy) {
                    /*
                     * The element is on the top of the screen
                     */
                    contentDiv.className = "pressgang_websites_divContainerUp";
                    outerArrowDiv.className = "pressgang_websites_calloutUp";
                    innerArrowDiv.className = "pressgang_websites_calloutUp2";
                    calloutDiv.appendChild(outerArrowDiv);
                    calloutDiv.appendChild(contentDiv);

                    /*
                     * calloutDiv.getBoundingClientRect() will only return valid information in the next tick,
                     * so use setTimeout
                     */
                    setTimeout(function() {
                        var calloutPosition = calloutDiv.getBoundingClientRect();

                        if (!isCenteredHorizontally) {
                            calloutDiv.style.left = (elementPosition.left + pressgang_website_callout_offset_size) + "px";
                        }

                        if (!isCenteredVertically) {
                            var idealTop = elementPosition.bottom - pressgang_website_callout_offset_size;
                            calloutDiv.style.top = (idealTop + calloutPosition.height > y ? y - calloutPosition.height : idealTop) + "px";
                        }
                    }, 0);
                } else {
                    /*
                     * The element is on the bottom of the screen                                                          Added help overlay
                     */
                    contentDiv.className = "pressgang_websites_divContainerDown";
                    outerArrowDiv.className = "pressgang_websites_calloutDown";
                    innerArrowDiv.className = "pressgang_websites_calloutDown2";
                    calloutDiv.appendChild(contentDiv);
                    calloutDiv.appendChild(outerArrowDiv);

                    /*
                     * calloutDiv.getBoundingClientRect() will only return valid information in the next tick,
                     * so use setTimeout
                     */
                    setTimeout(function() {
                        var calloutPosition = calloutDiv.getBoundingClientRect();

                        if (!isCenteredHorizontally) {
                            calloutDiv.style.left = (elementPosition.left + pressgang_website_callout_offset_size) + "px";
                        }

                        if (!isCenteredVertically) {
                            var idealTop = elementPosition.top - calloutPosition.height + pressgang_website_callout_offset_size;
                            calloutDiv.style.top = (idealTop + calloutPosition.height < 0 ? 0 : idealTop) + "px";
                        }


                    }, 0);

                }
            } else {
                /*
                 * The element is on the right hand side of the screen
                 */
                if (elementPosition.top < hy) {
                    /*
                     * The element is on the top of the screen
                     */
                    contentDiv.className = "pressgang_websites_divContainerUp";
                    outerArrowDiv.className = "pressgang_websites_calloutUpRight";
                    innerArrowDiv.className = "pressgang_websites_calloutUp2";
                    calloutDiv.appendChild(outerArrowDiv);
                    calloutDiv.appendChild(contentDiv);

                    /*
                     * calloutDiv.getBoundingClientRect() will only return valid information in the next tick,
                     * so use setTimeout
                     */
                    setTimeout(function() {
                        var calloutPosition = calloutDiv.getBoundingClientRect();

                        if (!isCenteredHorizontally) {
                            calloutDiv.style.left = (elementPosition.left - calloutPosition.width + pressgang_website_diagonal_callout_offset_size) + "px";
                        }

                        if (!isCenteredVertically) {
                            var idealTop = elementPosition.bottom - pressgang_website_callout_offset_size;
                            calloutDiv.style.top = (idealTop + calloutPosition.height > y ? y - calloutPosition.height : idealTop) + "px";
                        }

                    }, 0);


                } else {
                    /*
                     * The element is on the bottom of the screen
                     */
                    contentDiv.className = "pressgang_websites_divContainerDown";
                    outerArrowDiv.className = "pressgang_websites_calloutDownRight";
                    innerArrowDiv.className = "pressgang_websites_calloutDown2";
                    calloutDiv.appendChild(contentDiv);
                    calloutDiv.appendChild(outerArrowDiv);

                    setTimeout(function() {
                        var calloutPosition = calloutDiv.getBoundingClientRect();

                        if (!isCenteredHorizontally) {
                            calloutDiv.style.left = (elementPosition.right - calloutPosition.width + pressgang_website_diagonal_callout_offset_size) + "px";
                        }

                        if (!isCenteredVertically) {
                            var idealTop = elementPosition.top - calloutPosition.height + pressgang_website_callout_offset_size;
                            calloutDiv.style.top = (idealTop + calloutPosition.height < 0 ? 0 : idealTop) + "px";
                        }
                    }, 0);
                }
            }
        }
    }

    // Once the popover is positioned, restore the alpha to make it visible
    setTimeout(function(){
        calloutDiv.style.opacity = 1;
        pressgang_website_reposition_initial_callout();
    }, 0);
}

/**
 * This is called by the pressgang_website.js file.
 * @param data a mapping between topic ids and HTML file names.
 */
pressgang_website_callback = function(data) {
    if (data) {

        var changedPositionFromStatic = [];
        var changedPositionFromDefault = [];
        var displaying = false;
        var zIndexDiff = 0;

        /*
         * Resizing could invalidate the position of the callout. So we close
         * the callouts if the window is resized.
         */
        window.addEventListener("resize", function() {
            if (displaying) {
                pressgang_website_close_callout();
            }
        });

        /*
         Create the initial help callout
         */
        pressgang_website_initialHelp = document.createElement("div");
        pressgang_website_initialHelp.id = pressgang_website_initial_calloutID;
        pressgang_website_initialHelp.textContent = "Press Escape to close the help overlay.\nMouse over the highlighted elements to view the help."
        pressgang_website_initialHelp.className = "pressgang_websites_divContainerNone";
        pressgang_website_initialHelp.style.left = "50%";
        pressgang_website_initialHelp.style.top = "50%";
        pressgang_website_initialHelp.style.marginLeft = "-250px";
        pressgang_website_initialHelp.style.textAlign = "center";

        /**
         * Enabled the help overlay.
         */
        pressgang_website_enable = function() {
            if (displaying) {
                console.log("displaying should be false");
                return;
            }

            if (changedPositionFromStatic.length != 0) {
                console.log("changedPositionFromStatic should be empty");
                return;
            }

            if (changedPositionFromDefault.length != 0) {
                console.log("changedPositionFromDefault should be empty");
                return;
            }

            displaying = true;

            pressgang_website_disable_scroll();

            document.addEventListener("keydown", pressgang_website_key_handler, false);
            window.addEventListener("hashchange", pressgang_website_url_change_handler, false);

            var highestZIndex = pressgang_website_get_highest_zindex();
            var dimmerOverlayZIndex = highestZIndex + 1;
            zIndexDiff = highestZIndex + 2;
            var mouseBlockZIndex = highestZIndex + zIndexDiff + 1;
            var initialCalloutZIndex = mouseBlockZIndex + 1;
            var calloutZIndex = initialCalloutZIndex + 1;

            /*
             * Add an overlay that sits above any regular HTML element
             */
            var overlayDiv = document.createElement("div");

            overlayDiv.id = pressgang_website_dimmerOverlayID;
            overlayDiv.style.zIndex = dimmerOverlayZIndex;
            overlayDiv.style.backgroundColor = "black";
            overlayDiv.style.opacity= 0.9;
            overlayDiv.style.position = "fixed";
            overlayDiv.style.top = 0;
            overlayDiv.style.bottom = 0;
            overlayDiv.style.left = 0;
            overlayDiv.style.right = 0;

            document.body.appendChild(overlayDiv);

            /*
             * Add an overlay that sits above the promoted ui elements
             */
            var blockerDiv = document.createElement("div");

            blockerDiv.id = pressgang_website_blockerOverlayID;
            blockerDiv.style.zIndex = mouseBlockZIndex;
            blockerDiv.style.position = "fixed";
            blockerDiv.style.top = 0;
            blockerDiv.style.bottom = 0;
            blockerDiv.style.left = 0;
            blockerDiv.style.right = 0;

            document.body.appendChild(blockerDiv);

            /*
             * Display the initial help callout
             */
            pressgang_website_initialHelp.style.zIndex = initialCalloutZIndex;
            pressgang_website_open_initial_callout();

            /*
             * Promote the elements listed in the data
             */
            var processedParents = [];
            for (var i = 0, dataLength = data.length; i < dataLength; ++i) {
                var dataItem = data[i];
                var elements = document.querySelectorAll('[data-pressgangtopic="' + dataItem.topicId + '"]');

                for (var j = 0, elementsLength = elements.length; j < elementsLength; ++j) {
                    var element = elements[j];

                    var computedStyle = window.getComputedStyle(element);
                    if (computedStyle.position == "static") {
                        element.style.position = "relative";
                        changedPositionFromStatic.push(element);
                    } else if (computedStyle.position == "") {
                        element.style.position = "relative";
                        changedPositionFromDefault.push(element);
                    }

                    // the element being promoted is directly attached to the body
                    if (element.parentNode == document.body) {
                        element.style.zIndex += zIndexDiff;
                    } else {
                        var topMostParent = element.parentNode;
                        while (topMostParent.parentNode != document.body) {
                            topMostParent = topMostParent.parentNode;
                        }

                        var found = false;
                        for (var parentIndex = 0, parentCount = processedParents.length; parentIndex < parentCount; ++parentIndex) {
                            if (processedParents[parentIndex] == topMostParent)  {
                                found = true;
                                break;
                            }
                        }

                        // dont add another dimmer to the parent if it has already been processed
                        if (!found) {
                            processedParents.push(topMostParent);

                            var computedStyle = window.getComputedStyle(topMostParent);
                            if (computedStyle.position == "static") {
                                topMostParent.style.position = "relative";
                                changedPositionFromStatic.push(topMostParent);
                            } else if (computedStyle.position == "") {
                                topMostParent.style.position = "relative";
                                changedPositionFromDefault.push(topMostParent);
                            }

                            topMostParent.style.zIndex += zIndexDiff;
                            if (topMostParent.style.backgroundColor == "") {
                                topMostParent.style.backgroundColor = "white";
                            }

                            var localDimmer = document.createElement("div");
                            localDimmer.style.position = "absolute";
                            localDimmer.style.top = 0;
                            localDimmer.style.bottom = 0;
                            localDimmer.style.left = 0;
                            localDimmer.style.right = 0;
                            localDimmer.style.backgroundColor = "black";
                            localDimmer.style.opacity = 0.9;
                            localDimmer.style.zIndex = pressgang_website_local_dimmer_zindex_offset;
                            localDimmer.setAttribute("data-pressganglocaldimmer", "true");
                            element.parentNode.appendChild(localDimmer);
                        }

                        element.style.zIndex += pressgang_website_local_zindex_offset;
                    }
                }

            }

            /*
             * Handle mouse movements to detect a collection with an element that has a help topic.
             * @param e the event data
             */
            pressgang_website_mouse_move = function(e) {

                function checkOverPopover(e) {
                    /*
                     * Don't display a new callout if the mouse is over the
                     * existing one.
                     */
                    var callout = document.getElementById(pressgang_website_calloutID);
                    if (callout != null) {
                        var calloutPosition = callout.getBoundingClientRect();
                        return e.clientX >= calloutPosition.left &&
                            e.clientX <= calloutPosition.right &&
                            e.clientY >= calloutPosition.top &&
                            e.clientY <= calloutPosition.bottom;
                    }

                    return false;
                }

                if (checkOverPopover(e)) {
                    // If we have moved the mouse back over the existing popover, cancel any
                    // pending request to change the popover
                    if (pressgang_website_popover_switch_timeout) {
                        clearTimeout(pressgang_website_popover_switch_timeout);
                        pressgang_website_popover_switch_timeout = null;
                    }


                    return;
                }

                /*
                 Loop over each element identified by a topic in the documentation, and see if the mouse is over
                 it.
                 */
                var mouseOverElement = false;
                outerloop:
                    for (var i = 0, dataLength = data.length; i < dataLength; ++i) {
                        var dataItem = data[i];
                        var elements = document.querySelectorAll('[data-pressgangtopic="' + dataItem.topicId + '"]');
                        for (var j = 0, elementsLength = elements.length; j < elementsLength; ++j) {
                            var element = elements[j];
                            var elementPosition = element.getBoundingClientRect();

                            if (e.clientX >= elementPosition.left &&
                                e.clientX <= elementPosition.right &&
                                e.clientY >= elementPosition.top &&
                                e.clientY <= elementPosition.bottom) {

                                /*
                                 We have found an element with a help topic associated with it under the mouse cursor.
                                 Display the new popover after a short delay.
                                 */
                                if (element != pressgang_website_lastSelectedElement) {
                                    // If there is a pending timeout, cancel it
                                    if (pressgang_website_popover_switch_timeout) {
                                        clearTimeout(pressgang_website_popover_switch_timeout);
                                        pressgang_website_popover_switch_timeout = null;
                                    }

                                    pressgang_website_popover_switch_timeout = setTimeout(
                                        function(element, dataItem) {
                                            return function() {
                                                pressgang_website_build_callout(element, dataItem, calloutZIndex);
                                                pressgang_website_lastSelectedElement = element;
                                                pressgang_website_popover_switch_timeout = null;
                                            }
                                        }(element, dataItem), pressgang_website_popover_switch_deplay
                                    );
                                }
                                mouseOverElement = true;
                                break outerloop;
                            }
                        }
                    }

                pressgang_website_reposition_initial_callout(e);
            }

            document.addEventListener("mousemove", pressgang_website_mouse_move, false);
        }

        /**
         * Disables the help overlay. Call this to close the overlay and return to normal.
         */
        pressgang_website_disable = function() {
            if (!displaying) {
                console.log("displaying should be true");
                return;
            }

            displaying = false;

            if (pressgang_website_popover_switch_timeout) {
                clearTimeout(pressgang_website_popover_switch_timeout);
                pressgang_website_popover_switch_timeout = null;
            }

            document.removeEventListener("keydown", pressgang_website_key_handler);
            document.removeEventListener("mousemove", pressgang_website_mouse_move);
            window.removeEventListener("hashchange", pressgang_website_url_change_handler);

            var overlayDiv = document.getElementById(pressgang_website_dimmerOverlayID);
            if (overlayDiv != null && overlayDiv.parentNode != null) {
                overlayDiv.parentNode.removeChild(overlayDiv);
            }

            var mouseBlockDiv = document.getElementById(pressgang_website_blockerOverlayID);
            if (mouseBlockDiv != null && mouseBlockDiv.parentNode != null) {
                mouseBlockDiv.parentNode.removeChild(mouseBlockDiv);
            }

            pressgang_website_close_initial_callout();
            pressgang_website_close_callout();
            pressgang_website_enable_scroll();

            var processedParents = [];
            for (var i = 0, dataLength = data.length; i < dataLength; ++i) {
                var dataItem = data[i];
                var elements = document.querySelectorAll('[data-pressgangtopic="' + dataItem.topicId + '"]');
                for (var j = 0, elementsLength = elements.length; j < elementsLength; ++j) {
                    var element = elements[j];

                    if (element.parentNode == document.body) {
                        element.style.zIndex -= zIndexDiff;
                    } else {
                        element.style.zIndex -= pressgang_website_local_zindex_offset;

                        var topMostParent = element.parentNode;
                        while (topMostParent.parentNode != document.body) {
                            topMostParent = topMostParent.parentNode;
                        }

                        var found = false;
                        for (var parentIndex = 0, parentCount = processedParents.length; parentIndex < parentCount; ++parentIndex) {
                            if (processedParents[parentIndex] == topMostParent)  {
                                found = true;
                                break;
                            }
                        }

                        if (!found) {
                            processedParents.push(topMostParent);
                            topMostParent.style.zIndex -= zIndexDiff;
                        }
                    }
                }
            }

            var localDimmerElements = document.querySelectorAll('[data-pressganglocaldimmer="true"]');
            for (var j = 0, elementsLength = localDimmerElements.length; j < elementsLength; ++j) {
                var localDimmer = localDimmerElements[j];
                localDimmer.parentNode.removeChild(localDimmer);
            }


            for (var i = 0, count = changedPositionFromStatic.length; i < count; ++i) {
                changedPositionFromStatic[i].style.position = "static";
            }

            for (var i = 0, count = changedPositionFromDefault.length; i < count; ++i) {
                changedPositionFromDefault[i].style.position = "";
            }

            changedPositionFromDefault = [];
            changedPositionFromStatic = [];
            zIndexDiff = 0;
        }
    }

    /**
     * Closes any open popover
     */
    pressgang_website_close_callout = function() {
        var callout = document.getElementById(pressgang_website_calloutID);
        if (callout != null && callout.parentNode != null) {
            callout.parentNode.removeChild(callout);
        }
        pressgang_website_lastSelectedElement = null;

    }

    /**
     * Repositions the initial help so it stays out of the way of the mouse and any other callouts.
     */
    pressgang_website_reposition_initial_callout = function(e) {
        if (pressgang_website_initialHelp.parentNode == document.body) {
            function mouseCollides(x, y, left, width, top, height) {
                return e.clientX >= left &&
                    e.clientX <= left + width &&
                    e.clientY >= top &&
                    e.clientY <= top + height;
            }

            function calloutCollides(left, width, top, height) {
                var callout = document.getElementById(pressgang_website_calloutID);
                if (callout != null) {
                    var calloutPosition = callout.getBoundingClientRect();

                    if (!((calloutPosition.bottom < top) ||
                        (calloutPosition.top > top + height) ||
                        (calloutPosition.left > left + width) ||
                        (calloutPosition.right < left))) {
                        return true;
                    }
                }

                return false;
            }

            var initialHelpPosition = pressgang_website_initialHelp.getBoundingClientRect();

            // we collide in our current location
            if ((e && mouseCollides(e.clientX, e.clientY, initialHelpPosition.left, initialHelpPosition.width, initialHelpPosition.top, initialHelpPosition.height)) ||
                calloutCollides(initialHelpPosition.left, initialHelpPosition.width, initialHelpPosition.top, initialHelpPosition.height)) {

                var w = window.innerWidth;
                var h = window.innerHeight;

                var offset = 32;

                // try all the corners
                if (!((e && mouseCollides(e.clientX, e.clientY, offset, initialHelpPosition.width, offset, initialHelpPosition.height)) ||
                    calloutCollides(offset, initialHelpPosition.width, offset, initialHelpPosition.height))) {
                    pressgang_website_initialHelp.style.left = offset + "px";
                    pressgang_website_initialHelp.style.top = offset + "px";
                    pressgang_website_initialHelp.style.marginLeft = "0";
                } else if (!((e && mouseCollides(e.clientX, e.clientY, w - offset - initialHelpPosition.width, initialHelpPosition.width, offset, initialHelpPosition.height)) ||
                    calloutCollides(w - offset - initialHelpPosition.width, initialHelpPosition.width, offset, initialHelpPosition.height))) {
                    pressgang_website_initialHelp.style.left = w - offset - initialHelpPosition.width + "px";
                    pressgang_website_initialHelp.style.top = offset + "px";
                    pressgang_website_initialHelp.style.marginLeft = "0";
                } else if (!((e && mouseCollides(e.clientX, e.clientY, w - offset - initialHelpPosition.width, initialHelpPosition.width, h - offset - initialHelpPosition.height, initialHelpPosition.height)) ||
                    calloutCollides(w - offset - initialHelpPosition.width, initialHelpPosition.width, h - offset - initialHelpPosition.height, initialHelpPosition.height))) {
                    pressgang_website_initialHelp.style.left = w - offset - initialHelpPosition.width + "px";
                    pressgang_website_initialHelp.style.top = h - offset - initialHelpPosition.height + "px";
                    pressgang_website_initialHelp.style.marginLeft = "0";
                } else {
                    pressgang_website_initialHelp.style.left = offset + "px";
                    pressgang_website_initialHelp.style.top = h - offset - initialHelpPosition.height + "px";
                    pressgang_website_initialHelp.style.marginLeft = "0";
                }
            }
        }
    }

    /**
     * Closes the popover that displays the initial help
     */
    pressgang_website_close_initial_callout = function() {
        if (pressgang_website_initialHelp.parentNode == document.body) {
            pressgang_website_initialHelp.parentNode.removeChild(pressgang_website_initialHelp);
        }
    }

    /**
     * Displays the initial help
     */
    pressgang_website_open_initial_callout = function () {
        if (pressgang_website_initialHelp.parentNode != document.body) {
            document.body.appendChild(pressgang_website_initialHelp);
        }
    }

    /**
     * @return true if the initial callout is displayed, false otherwise
     */
    pressgang_website_initial_callout_displayed = function () {
        return pressgang_website_initialHelp.parentNode == document.body;
    }

    /*
     The following functions are used to prevent page scrolling while the overlay is active.
     */

    // left: 37, up: 38, right: 39, down: 40,
    // spacebar: 32, pageup: 33, pagedown: 34, end: 35, home: 36
    var pressgang_website_scrolling_keys = [37, 38, 39, 40, 32, 33, 34, 35, 36];

    function pressgang_website_preventDefault(e) {
        e = e || window.event;
        if (e.preventDefault)
            e.preventDefault();
        e.returnValue = false;
    }

    function pressgang_website_keydown(e) {
        for (var i = pressgang_website_scrolling_keys.length; i--;) {
            if (e.keyCode === pressgang_website_scrolling_keys[i]) {
                pressgang_website_preventDefault(e);
                return;
            }
        }
    }

    function pressgang_website_wheel(e) {
        pressgang_website_preventDefault(e);
    }

    function pressgang_website_disable_scroll() {
        if (window.addEventListener) {
            window.addEventListener('DOMMouseScroll', pressgang_website_wheel, false);
        }
        window.onmousewheel = document.onmousewheel = pressgang_website_wheel;
        document.onkeydown = pressgang_website_keydown;
    }

    function pressgang_website_enable_scroll() {
        if (window.removeEventListener) {
            window.removeEventListener('DOMMouseScroll', pressgang_website_wheel, false);
        }
        window.onmousewheel = document.onmousewheel = document.onkeydown = null;
    }
}
